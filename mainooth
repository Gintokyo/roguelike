# Roguelike game

print("Hi and welcome to this simple Python roguelike game!\n")

# Classes
class Classe:
    def __init__(self, name, stats):
        self.name = name
        self.stats = stats
        
    # Printing nicer output
    def __str__(self):
        return f"{self.name} -> " + " ".join(f"{k}: {v}" for k, v in self.stats.items())
# Classes
warrior = Classe("Warrior",{"HP": 25, "ATK": 15, "DEF": 15})
wizard = Classe("Wizard",{"HP": 15, "ATK": 25, "DEF": 5})
oplita = Classe("Oplita",{"HP": 20, "ATK": 10, "DEF": 20})

# Enemies
bandit = Classe("Bandit",{"HP": 10, "ATK": 5, "DEF": 2})


# Cards
class Card:
    def __init__(self, name, effect, power):
        self.name = name
        self.effect = effect
        self.power = power
        
    # Printing card
    def __str__(self):
        return f"{self.name} {self.effect} {self.power}"
    
    # self == card, player == card player, enemy == receiver
    def applyEffect (self, player, enemy):
        effect = self.effect.lower()
        if effect == "attack":
            enemy.stats["HP"] -= self.power
            print(f"{self.name} does {self.power} damage to {enemy.name}'s HP")
        elif effect == "heal":
            enemy.stats["HP"] += self.power
            print(f"{self.name} heals {self.power} HPs to {enemy.name}")

	# Buffs & Debuffs
        elif effect.startswith("buff") or effect.startswith("debuff"):
            # Splits the words "buff ATK" -> ["buff", "ATK"]
            parts = effect.split()
            if len(parts) == 2:
                # 'parts' will be composed of 'action' and 'stat'
                action, stat = parts
                stat = stat.upper()
                if action == "buff":
                    enemy.stats[stat] += self.power
                    print(f"{self.name} boosts {enemy.name}'s {stat} by {self.power}")
                elif action == "debuff":
                    enemy.stats[stat] -= self.power
                    print(f"{self.name} lowers {enemy.name}'s {stat} by {self.power}")
                else:
                    print(f"{stat} not found!")
# Damage cards
fireball = Card("Fireball", "attack", 5)
dmg_deck = [
    fireball
]

# Healing cards
heal = Card("Heal", "heal", 5)
heal_deck = [
    heal
]

# Status cards
poison = Card("Poison", "poison damage", 1)
atkp = Card("Strength", "buff ATK", 1)
defm = Card("Soft", "debuff DEF", 1)
status_deck = [
    poison,
    atkp,
    defm
]

# Player's deck
player_deck = [
    fireball,
    heal,
    atkp
    ]
# Function to print cards in the deck (will become Cards in Hand)
def my_deck():
    n = 1
    for card in player_deck:
        print(f"{n}. {card}")
        n += 1
#for cards in player_deck:
#    cards = 0
#    print(player_deck[cards])
#    cards = cards + 1

print("Please, select your Classe:")
selectedClasse = None
# Needed to store the resutl outside the loop once it ends
while selectedClasse == None:
    selection = input(f"1. {warrior}\n2. {wizard}\n3. {oplita}\n")
    match selection:
        case "1":
            answer = input(f"You selected {warrior}.\nAre you okay with this(y/n)? ")
            if answer.lower() == "n":
                print("What Classe would you choose?")
                continue
            elif answer.lower() =="y":
                selectedClasse = warrior
                # break must be after the re-assignment of the variable
                break
            else:
                print("Select your Classe, ¡por favor!")
                continue
        case "2":
            answer = input(f"You selected {wizard}.\nAre you okay with this(y/n)? ")
            if answer.lower() == "n":
                print("What Classe would you choose?")
                continue
            elif answer.lower() =="y":
                selectedClasse = wizard
                break
            else:
                print("Select your Classe, ¡por favor!")
                continue
        case "3":
           answer = input(f"You selected {oplita}.\nAre you okay with this(y/n)? ")
           if answer.lower() == "n":
                print("What Classe would you choose?")
                continue
           elif answer.lower() =="y":
                selectedClasse = oplita
                break
           else:
                print("Select your Classe, ¡por favor!")
                continue
        case _:
            print(f"Select a Classe before starting!")


print(f"Are you ready to start, {selectedClasse.name}?")
print(f"Your first enemy is {bandit}")
print(f"You use {defm.name}")
# How to change a stat
defm.applyEffect(selectedClasse, bandit)
print(f"{bandit.name}'s DEF is now {bandit.stats["DEF"]}")

gameOver = False
while gameOver == False:
    #action = input(f"What card would you like to use?\n{fireball.name}, {heal.name}, {atkp.name}")
    print(f"What card would you like to use?\n")
    my_deck()
    # TRYING TO MAKE THIS WORK
    #print(player_deck)
    gameOver = True